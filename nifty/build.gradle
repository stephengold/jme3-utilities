// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

description = 'A NiftyGUI library for jMonkeyEngine.'
ext {
    artifact = 'jme3-utilities-nifty'
    version = jme3utilitiesniftyVersion
    baseName = "${artifact}-${version}" // for POM and class JAR
}

jar { archiveBaseName = project.ext.baseName }
javadocJar { archiveBaseName = project.ext.baseName }
sourcesJar { archiveBaseName = project.ext.baseName }

dependencies {
    api 'com.github.nifty-gui:nifty:1.4.3'
    api 'com.github.nifty-gui:nifty-default-controls:1.4.3'

    api 'com.github.stephengold:Heart:' + heartVersion
    api 'com.github.stephengold:jme3-utilities-ui:' + jme3utilitiesuiVersion
    //    api project(':ui')
}

// publishing tasks

task('install') {
    dependsOn 'publishMavenPublicationToMavenLocal'
    description 'Installs Maven artifacts to the local Maven repository.'
}
task('release') {
    dependsOn 'publishMavenPublicationToOSSRHRepository'
    description 'Stages Maven artifacts to Sonatype OSSRH.'
}

build.dependsOn('pom', 'pomAsc')
task('pom', type: Copy) {
    dependsOn 'generatePomFileForMavenPublication'
    description 'Copies the Maven POM to build/libs.'
    from "${buildDir}/publications/maven/pom-default.xml"
    into "${buildDir}/libs"
    rename 'pom-default.xml', baseName + '.pom'
}
task('pomAsc', type: Copy) {
    dependsOn 'signMavenPublication'
    description 'Copies the signature of the Maven POM to build/libs.'
    from "${buildDir}/publications/maven/pom-default.xml.asc"
    into "${buildDir}/libs"
    rename 'pom-default.xml.asc', baseName + '.pom.asc'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact javadocJar
            artifact sourcesJar
            artifactId artifact
            from components.java
            pom {
                description = project.description
                developers {
                    developer {
                        email = 'sgold@sonic.net'
                        name = 'Stephen Gold'
                    }
                }
                licenses {
                    license {
                        distribution = 'repo'
                        name = 'New BSD (3-clause) License'
                        url = 'https://opensource.org/licenses/BSD-3-Clause'
                    }
                }
                name = 'com.github.stephengold:' + artifact
                scm {
                    connection = 'scm:git:git://github.com/stephengold/jme3-utilities.git'
                    developerConnection = 'scm:git:ssh://github.com:stephengold/jme3-utilities.git'
                    url = 'https://github.com/stephengold/jme3-utilities/tree/master'
                }
                url = 'https://github.com/stephengold/jme3-utilities'
            }
            version project.ext.version
        }
    }
    repositories {
        maven {
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'Unknown user'
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'Unknown password'
            }
            name = 'OSSRH'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
        }
    }
}
generateMetadataFileForMavenPublication.dependsOn('pom')
publishMavenPublicationToMavenLocal.doLast {
    println 'installed locally as ' + baseName
}

// signing tasks

signing {
    sign publishing.publications.maven
}
tasks.withType(Sign) {
    onlyIf { rootProject.hasProperty('signing.keyId') }
}